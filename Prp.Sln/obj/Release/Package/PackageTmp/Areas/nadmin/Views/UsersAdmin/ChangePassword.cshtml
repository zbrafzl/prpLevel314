@{
    ViewBag.Title = "Change Password";
    Layout = "~/Areas/nadmin/Views/Shared/_Layout.cshtml";
}

@model Prp.Sln.UserSetupModel
@section RenderCss{

}
@section RenderScript{

    <script>
        $(document).ready(function () {


        });


        function SetValueAndValidateForm(event) {

            var isOk = true;

            try {

                var newPassword = ConvertToString($("#txtNewPassword").val());
                var newPasswordRetype = ConvertToString($("#txtNewPasswordRetype").val());

                if (newPassword.length < 6) {

                    isOk = false;
                    alert("Password length minumum is 6 digits.")
                }


                if (newPassword != newPasswordRetype) {

                    isOk = false;
                    alert("New Password and retype password mismatch.")

                }


            } catch (e) {
                isOk = false;
            }


            if (isOk == false)
                event.preventDefault();
        }
    </script>
}
<div class="row">
    <div class="col-md-12 col-sm-12 ">
        <div class="x_panel">
            <div class="x_title">
                <h2>Change Password </h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <br />
                @using (Html.BeginForm("ChangePasswordData", "UsersAdmin", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = " SetValueAndValidateForm(event)" }))
                {
                    <form id="demo-form2" data-parsley-validate class="form-horizontal form-label-left">
                        @Html.HiddenFor(m => m.user.userId, new { @id = "hfdId" })
                        <div class="form-group col-lg-12">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <label for="heard">Old Password *:</label>
                                @Html.TextBoxFor(a => a.user.password, new { @type = "password", @class = "form-control", @required = "required", @id = "txtPassword", @tabindex = "1" })
                            </div>
                        </div>
                        <div class="form-group col-lg-12">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <label for="heard">New Password *: <small> ( Minimum lenght 6 character ) </small> </label>
                                @Html.TextBoxFor(a => a.user.passwordNew, new { @type = "password", @class = "form-control", @required = "required", @id = "txtNewPassword", @tabindex = "2" })
                            </div>
                        </div>
                        <div class="form-group col-lg-12">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <label for="heard">Re tpe New Password *: <small> ( Minimum lenght 6 character ) </small></label>
                                @Html.TextBoxFor(a => a.user.passwordNewRetype, new { @type = "password", @class = "form-control", @required = "required", @id = "txtNewPasswordRetype", @tabindex = "3" })
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="ln_solid"></div>
                        <div class="item form-group">
                            <div class="col-md-6 col-sm-6 offset-md-3">
                                <button type="submit" class="btn btn-success" tabindex="8">Update Password</button>
                            </div>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
</div>